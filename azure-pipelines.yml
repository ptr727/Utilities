pool:
  vmImage: windows-2019

# Variables must be defined in pipeline configuration
#variables:
#  BuildConfiguration: Debug

name: $(MajorVersion).$(MinorVersion).$(Date:yyyyMMdd).$(Rev:r)

steps:

#- script: echo $(Build.BuildNumber)
#- script: echo $(Build.BuildId)
#- script: echo $(Build.DefinitionName)
#- script: echo $(Build.SourceBranchName)

# DotNet Core 2.x runtime is required by GitVersion tool
- task: UseDotNet@2
  inputs:
    packageType: runtime
    version: 2.x

- task: UseDotNet@2
  inputs:
    packageType: sdk
    version: 3.1.x

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 4.9.x

# https://cloudblogs.microsoft.com/industry-blog/en-gb/technetuk/2019/06/18/perfecting-continuous-delivery-of-nuget-packages-for-azure-artifacts/
# https://gitversion.net/docs/build-server-support/build-server/azure-devops
- task: GitVersion@5
  inputs:
    runtime: core
    configFilePath: gitversion.yml

- task: DotNetCoreCLI@2
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:Version=$(GitVersion.NuGetVersion)'
    versioningScheme: byBuildNumber

- task: VSTest@2
  displayName: Test
  inputs:
    codeCoverageEnabled: true
    diagnosticsEnabled: true

- task: DotNetCoreCLI@2
  inputs:
    command: pack
    nobuild: true
    includesymbols: true
    includesource: true
    versioningScheme: byEnvVar 
    versionEnvVar: GitVersion.NuGetVersion

# Use NuGet command task instead of dotnet push for .snupkg symbol support
- task: NuGetCommand@2
  inputs:
    command: push
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: NuGet
