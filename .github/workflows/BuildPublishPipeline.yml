name: 'Build and Publish Pipeline'

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # Do not push on pull_request events
  dopush: ${{ github.event_name != 'pull_request' }}
  # main branch
  mainbranch: ${{ endsWith(github.ref, 'refs/heads/main') }}

jobs:
  build:
    name: 'Build and Publish Pipeline'
    runs-on: ubuntu-latest

    steps:

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: 'Setup .NET SDK 7.0'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      
      # Checkout code
      # https://github.com/marketplace/actions/checkout
      - name: 'Checkout Code'
        uses: actions/checkout@v3
        with:
          # Get all history for version calculation
          fetch-depth: 0

      # Run Nerdbank.GitVersioning
      # https://github.com/marketplace/actions/nerdbank-gitversioning
      - name: 'Run Nerdbank.GitVersioning Tool'
        id: nbgv
        uses: dotnet/nbgv@master

      # Run Unit Tests
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: 'Run Unit Tests'
        run: dotnet test ./UtilitiesTests/UtilitiesTests.csproj

      # Build project, build will also create nuget packages, no need for pack
      # Set version information attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
      - name: 'Build Project'
        run: >-
            dotnet build ./Utilities/Utilities.csproj
            --output ./Publish/
            --configuration ${{ endsWith(github.ref, 'refs/heads/main') && 'Release' || 'Debug' }}
            -property:Version=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:FileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            -property:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:InformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
            -property:PackageVersion=${{ steps.nbgv.outputs.SemVer2 }}

      # Publish to NuGet.org Registry
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push
      - name: 'Publish to NuGet.org Registry'
        if: ${{ env.dopush }}
        run: >-
            dotnet nuget push ${{ github.workspace }}/Publish/*.nupkg
            --source https://api.nuget.org/v3/index.json
            --api-key ${{ env.dopush && secrets.NUGET_API_KEY || 'foo' }}
            --skip-duplicate

      # Publish to GitHub NuGet Registry
      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry
      - name: 'Publish to GitHub NuGet Registry'
        if: ${{ env.dopush }}
        run: >-
            dotnet nuget push ${{ github.workspace }}/Publish/*.nupkg
            --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
            --api-key ${{ secrets.GITHUB_TOKEN }}
            --skip-duplicate

      # Zip the output
      - name: 'Zip Output'
        if: ${{ env.dopush }}
        run: 7z a -t7z ./Publish/Utilities.7z ./Publish/*

      # Create GitHub release
      # https://github.com/marketplace/actions/automatic-releases
      - name: 'Create GitHub Release'
        if: ${{ env.dopush }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.nbgv.outputs.SemVer2 }}
          # Only main branch is not a pre-release
          prerelease: ${{ !env.mainbranch }}
          files: |
            LICENSE
            ./Publish/Utilities.7z
