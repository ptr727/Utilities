name: 'Build and Publish Pipeline'

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: 'Build and Publish Pipeline'
    runs-on: ubuntu-latest

    steps:

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: 'Setup .NET SDK 6.0'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      
      # Checkout code
      # https://github.com/marketplace/actions/checkout
      - name: 'Checkout Code'
        uses: actions/checkout@v2
        with:
          # Get all history for version calculation
          fetch-depth: 0

      # Run Nerdbank.GitVersioning
      # https://github.com/marketplace/actions/nerdbank-gitversioning
      - name: 'Run Nerdbank.GitVersioning Tool'
        id: nbgv
        uses: dotnet/nbgv@master

      # Run Unit Tests
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: 'Run Unit Tests'
        run: dotnet test ./UtilitiesTests/UtilitiesTests.csproj

      # Build project, build will also create nuget packages, no need for pack
      # Set version information attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
      - name: 'Build Project'
        run: >-
            dotnet build ./Utilities/Utilities.csproj
            --output ./Utilities/Artifacts
            --configuration ${{ endsWith(github.ref, 'refs/heads/main') && 'Release' || 'Debug' }}
            -property:Version=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:FileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            -property:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:InformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
            -property:PackageVersion=${{ steps.nbgv.outputs.SemVer2 }}

      # Publish to NuGet repository
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push
      - name: 'Publish to NuGet Repository'
        # Do not push pull requests
        if: ${{ github.event_name != 'pull_request' }}
        # Use build platform specific path convention, relative paths do not work
        run: >-
            dotnet nuget push ${{ github.workspace }}/Utilities/Artifacts/*.nupkg
            --source https://api.nuget.org/v3/index.json
            --api-key ${{ secrets.NUGET_API_KEY}}
            --skip-duplicate
