name: 'Build and Publish Pipeline'

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: 'Build and Publish Pipeline'
    runs-on: windows-latest

    steps:

      # Checkout code
      - name: 'Checkout Code'
        uses: actions/checkout@v2
        with:
          # Get all history for version calculation using GitVersion
          fetch-depth: 0

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: 'Setup .NET Core SDK 3.1'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: 'Setup .NET SDK 5.0'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      
      # Install GitVersion
      # Requires .NET Core 3.1
      # https://github.com/marketplace/actions/use-actions
      - name: 'Install GitVersion'
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'

      # Test project
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: 'Test Project'
        run: dotnet test ./UtilitiesTests/UtilitiesTests.csproj

      # Run GitVersion
      - name: 'Run GitVersion Tool'
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.6

      # Build project, build will also create nuget packages, no need for pack
      # Replace version information with GitVersion attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
      - name: 'Build Project'
        run: dotnet build ./Utilities/Utilities.csproj --output ./Utilities/Artifacts -property:Version=${{ steps.gitversion.outputs.assemblySemVer }} -property:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} -property:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} -property:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }} -property:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

      # Publish to NuGet repository
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push
      - name: 'Publish to NuGet Repository'
        # Do not push pullrequests
        if: ${{ !contains(github.ref, 'pullrequest') }}
        # Use build platform specific path convention, relative paths do not work
        run: dotnet nuget push ${{ github.workspace }}\Utilities\Artifacts\*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY}}
