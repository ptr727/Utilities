name: Build and publish release

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ 'README.md' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    name: Build and publish release
    runs-on: ubuntu-latest

    steps:

      # Install .NET SDK
      # https://github.com/marketplace/actions/setup-net-core-sdk
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
      
      # Checkout code
      # https://github.com/marketplace/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Get all history for version calculation
          fetch-depth: 0

      # Run Nerdbank.GitVersioning
      # https://github.com/marketplace/actions/nerdbank-gitversioning
      - name: Run Nerdbank.GitVersioning
        id: nbgv
        uses: dotnet/nbgv@master

      # Run Unit Tests
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
      - name: Run unit tests
        run: dotnet test ./UtilitiesTests/UtilitiesTests.csproj

      # Build project, build will also create nuget packages, no need for pack
      # Set version information attributes
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
      - name: Build project
        run: >-
            dotnet build ./Utilities/Utilities.csproj
            --output ./Publish/
            --configuration ${{ endsWith(github.ref, 'refs/heads/main') && 'Release' || 'Debug' }}
            -property:Version=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:FileVersion=${{ steps.nbgv.outputs.AssemblyFileVersion }}
            -property:AssemblyVersion=${{ steps.nbgv.outputs.AssemblyVersion }}
            -property:InformationalVersion=${{ steps.nbgv.outputs.AssemblyInformationalVersion }}
            -property:PackageVersion=${{ steps.nbgv.outputs.SemVer2 }}

      # Publish to NuGet.org Registry
      # https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push
      - name: Publish to NuGet.org
        if: ${{ github.event_name != 'pull_request' }}
        run: >-
            dotnet nuget push ${{ github.workspace }}/Publish/*.nupkg
            --source https://api.nuget.org/v3/index.json
            --api-key ${{ secrets.NUGET_API_KEY }}
            --skip-duplicate

      # Publish to GitHub NuGet Registry
      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry
      - name: Publish to GitHub NuGet Registry
        if: ${{ github.event_name != 'pull_request' }}
        run: >-
            dotnet nuget push ${{ github.workspace }}/Publish/*.nupkg
            --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
            --api-key ${{ secrets.GITHUB_TOKEN }}
            --skip-duplicate

      # Zip the output
      - name: Zip output
        if: ${{ github.event_name != 'pull_request' }}
        run: 7z a -t7z ./Publish/Utilities.7z ./Publish/*

      # Create GitHub release
      # https://github.com/marketplace/actions/automatic-releases
      - name: Create GitHub Release
        if: ${{ github.event_name != 'pull_request' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.nbgv.outputs.SemVer2 }}
          # Only main branch is not a pre-release
          prerelease: ${{ !endsWith(github.ref, 'refs/heads/main') }}
          files: |
            LICENSE
            ./Publish/Utilities.7z
